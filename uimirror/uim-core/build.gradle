apply plugin:'application'
ext {
	mongoVersion = "2.12.5"
	aspectVersion = "1.8.2"
	gensonVersion = '1.1-RC2'
	beanUtilVersion = '1.9.2'
	javaMailVersion = '1.5.0-b01'
	thymeleafVersion = '2.1.4.RELEASE'
	commonIoversion = '2.4'
	commonValidatorVersion = '1.4.1'
	commonCodecVersion = '1.10'
	swaggerApiversion='1.3.12'
}
//group = "com.uimirror.api"
//version = 1.0

dependencies {
	compile group: 'commons-io', name: 'commons-io', version:commonIoversion
	compile group: 'commons-validator', name: 'commons-validator', version:commonValidatorVersion
	compile (group: 'commons-beanutils', name:'commons-beanutils', version: beanUtilVersion)
	compile (group: 'commons-codec', name: 'commons-codec', version: commonCodecVersion)
	compile group: 'org.mongodb', name: 'mongo-java-driver', version: mongoVersion
	//Spring Depedancy
	compile (group: 'org.springframework', name: 'spring-aop', version: springVersion)
	compile (group: 'org.springframework', name: 'spring-context-support', version: springVersion)
	//Spring ENd

	//Aspect
	compile group: 'org.aspectj', name: 'aspectjrt', version: aspectVersion
	compile group: 'org.aspectj', name: 'aspectjweaver', version: aspectVersion
	compile group: 'org.aspectj', name: 'aspectjtools', version: aspectVersion
	//Aspect End
	
	//Genson
	compile group: 'com.owlike', name: 'genson', version: gensonVersion
	//Genson Json End
	
	//Jersey Start
	compile (group: 'org.glassfish.jersey.containers', name: 'jersey-container-servlet', version: jerseyVersion){
		exclude module: 'javax.annotation-api'
		exclude module: 'aopalliance-repackaged'
		exclude module: 'javax.inject'
		exclude module: 'hk2-api'
		exclude module: 'hk2-locator'
		exclude module: 'hk2-utils'
		exclude module: 'tiger-types'
		exclude module: 'osgi-resource-locator'
		exclude module: 'jersey-guava'
		exclude module: 'jersey-container-servlet-core'
		exclude module: 'jersey-container-servlet'
		exclude module: 'jersey-common'
		exclude module: 'jersey-server'
		exclude module: 'jersey-client'
	}
	//Jersey END
	//Genson
	compile (group: 'com.owlike', name: 'genson', version: gensonVersion)
	
	//Java Email
	compile (group: 'javax.mail', name: 'mail', version: javaMailVersion)
	//Thymeleaf email template
	compile (group: 'org.thymeleaf', name: 'thymeleaf-spring4', version: thymeleafVersion)
	//Swagger Annotations
	compile (group: 'com.wordnik', name: 'swagger-annotations', version: swaggerApiversion)
	
}

task sourceJar(type: Jar, dependsOn: classes) {
	classifier "source"
	from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

publishing {
	  publications {
		  mavenJava(MavenPublication) {
			  groupId project.group
			  artifactId project.name
			  version project.version
			  from components.java
			  artifact sourceJar {
				  classifier "sources"
			  }
			  artifact javadocJar {
				  classifier "javadoc"
			  }
		  }
	  }
}
jacoco {
	applyTo run
}

task applicationCodeCoverageReport(type:JacocoReport){
	executionData run
	sourceSets sourceSets.main
}

jacocoTestReport {
	reports {
		xml.enabled true
		csv.enabled false
		html.destination "${buildDir}/coverage"
	}
}
defaultTasks 'clean', 'build', 'intsall', 'publishToMavenLocal'