apply plugin:'application'

configurations.all {
	resolutionStrategy.eachDependency { DependencyResolveDetails details ->
	  if (details.requested.group == 'org.apache.tomcat.embed') {
		  details.useVersion '8.0.14'
	  }
	}
}

dependencies {
	compile project(':location-google')
	compile project(':location-store')
	//ws-filters
	compile group: 'com.uimirror.ws.api', name: 'ws-filters', version: wsFiltersVersion
	//ws-resource-secuirity
	compile group: 'com.uimirror.ws.api', name: 'ws-resource-security', version: wsSecurityVersion
	
	compile group: 'org.glassfish.jersey.containers', name: 'jersey-container-servlet', version: jerseyVersion
	compile group: 'org.glassfish.jersey.ext', name: 'jersey-spring3', version: jerseyVersion
	compile group: 'org.glassfish.jersey.media', name: 'jersey-media-json-processing', version: jerseyVersion
	compile (group: 'javax', name: 'javaee-api', version: javaeeApiVersion)
	compile (group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: springBootVersion){
		exclude module: 'jackson-databind'
	 exclude module: 'spring-webmvc'
	 exclude module: 'spring-web'
	 exclude module: 'log4j-over-slf4j'
	 exclude module: 'jboss-logging'
	 exclude module: 'jul-to-slf4j'
	}
	testCompile (group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: springBootVersion)
}

mainClassName = "com.uimirror.location.StartApp"

jar {
	manifest {
		attributes "Implementation-Title": "UIM Location"
		attributes "Implementation-Vendor": "UIMIRROR"
		attributes "Implementation-Version": project.version
		attributes "Main-Class": mainClassName
	}
}

description = "Location Module By Uimirror Team."

applicationDefaultJvmArgs = ["-Denv=dev", "-DcontextSource=classpath:application", "-Dport=8080", "-Dnio.port=8443"]

defaultTasks 'clean', 'build', 'intsall'
